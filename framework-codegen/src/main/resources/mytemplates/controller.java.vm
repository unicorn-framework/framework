package ${controllerContext.pkg};

import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMethod;
import org.unicorn.framework.core.ResponseDto;
import org.unicorn.framework.core.exception.PendingException;
import ${serviceImplContext.classImportPath};
import ${dtoContext.classImportPath};
import ${entityContext.classImportPath};
import org.springframework.beans.factory.annotation.Autowired;
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * ${table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}")
#if(${superControllerClass})
public class ${controllerContext.name} extends ${superControllerClass} {
#else
public class ${controllerContext.name} {
#end
	@Autowired
    private ${serviceImplContext.name} ${serviceImplContext.beanName};
    
    /**
	 * 新增记录
	 * @param ${entityContext.beanName}
	 * @return
	 * @throws PendingException
	 */
	@RequestMapping(value = { "/save}" }, method = { RequestMethod.POST })
	public ResponseDto<?> save(@RequestBody ${entityContext.name}  ${entityContext.beanName}) throws PendingException {
		return new ResponseDto<>(${serviceImplContext.beanName}.save(${entityContext.beanName}));
	}
	
	 /**
	 * 根据主键删除
	 * @param ${entityContext.beanName}
	 * @return
	 * @throws PendingException
	 */
	@RequestMapping(value = { "/delete/{${table.primaryTableField.propertyName}}" }, method = { RequestMethod.GET })
	public ResponseDto<?> delete(@PathVariable("${table.primaryTableField.propertyName}") ${table.primaryTableField.propertyType}  ${table.primaryTableField.propertyName}) throws PendingException {
		${serviceImplContext.beanName}.deleteByPrimaryKey(${table.primaryTableField.propertyName});
		 return new ResponseDto<>();
	}
	
	 /**
	 * 根据主键编辑
	 * @param ${entityContext.beanName}
	 * @return
	 * @throws PendingException
	 */
	@RequestMapping(value = { "/edit" }, method = { RequestMethod.POST })
	public ResponseDto<?> edit(@RequestBody ${entityContext.name}  ${entityContext.beanName}) throws PendingException {
		return new ResponseDto<>(${serviceImplContext.beanName}.updateByPrimaryKey(${entityContext.beanName}));
	}
	
	/**
	 * 根据主键查询
	 * @param ${entityContext.beanName}
	 * @return
	 * @throws PendingException
	 */
	@RequestMapping(value = { "/{${table.primaryTableField.propertyName}}" }, method = { RequestMethod.GET })
	public ResponseDto<?> queryByPrimaryKey(@PathVariable("${table.primaryTableField.propertyName}") ${table.primaryTableField.propertyType}  ${table.primaryTableField.propertyName}) throws PendingException {
		return new ResponseDto<>(${serviceImplContext.beanName}.selectByPrimaryKey( ${table.primaryTableField.propertyName}));
	}
	
	/**
	 * 根据条件查询单条信息
	 * @param ${entityContext.beanName}
	 * @return
	 * @throws PendingException
	 */
	@RequestMapping(value = { "/query" }, method = { RequestMethod.POST })
	public ResponseDto<?> query(@RequestBody ${entityContext.name}  ${entityContext.beanName}) throws PendingException {
		return new ResponseDto<>(${serviceImplContext.beanName}.selectOne( ${entityContext.beanName}));
	}
	
	/**
	 * 根据条件查询-分页
	 * @param ${entityContext.beanName}
	 * @return
	 * @throws PendingException
	 */
	@RequestMapping(value = { "/query/page" }, method = { RequestMethod.POST })
	public ResponseDto<?> query(@RequestBody ${dtoContext.name} ${dtoContext.beanName}) throws PendingException {
		return new ResponseDto<>(${serviceImplContext.beanName}.get${entity}ByPage( ${dtoContext.beanName}));
	}
}
